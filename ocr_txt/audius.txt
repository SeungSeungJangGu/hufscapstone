Audius
A Decentralized Protocol for Audio Content

Roneil Rumburg Sid Sethi Hareesh Nagaraj
Last Update: October 8, 2020*

Abstract

The music industry generates $43 billion in revenue but only 12% goes to content artists. Furthermore,
artists have minimal control over how their music is distributed and little visibility into who is streaming
it. To address these and other problems faced by artists, we introduce Audius, a fully decentralized
music streaming protocol built with public blockchain infrastructure and other decentralized technologies.
Audius allows artists to distribute to and get paid directly from their fans, and is comprised of the following
components:

1. An efficient token economy powered by the Audius platform token (SAUDIO), 3rd-party stablecoins,
and artist tokens

2. A decentralized storage solution and ledger for sharing audio and metadata

3. A unique track encryption scheme paired with a programmable mechanism to unlock user-specific
proxy re-encryption keys for content

4. A discovery protocol for users to efficiently query metadata

5. A decentralized governance protocol, whereby artists, node operators, and fans are individually and
collectively enfranchised in decision making about protocol changes and upgrades

The Audius protocol is live today and fully decentralized, operated by a robust decentralized com-
munity of artists, fans, and node operators, and serves nearly 500,000 users every month at the time of
writing.

* Audius is a work in progress and the contents of this paper are subject to change. The most current version can be found at
https://whitepaper.audius.co. For feedback and comments, please contact whitepaper@audius.co.
Contents

1 Introduction 3
1.1 Current problems... 2 ee 3

1.2 The Audius project... ee 3

13 Traction... ee 4

2 Token Model 4
2.1 Audius Token ($AUDIO) 2... ee 4
2.1.1 Audius Token Distribution 2... 0. 2. ee en 5

2.2 Stablecoin Payments 2... 5

2.3 Artist Tokens 2... ee 5
2.4 Why create anew token? 2... ee 5

3 Content Node 5
3.1 AudSP: A decentralized storage protocol. 2. 6. ee 6
3.2. Upload flow... ee 6
3.3 Content permissioning ©... ee 7
3.3.1 Proxy re-encryption 2... ee 7

3.3.2 Unlock conditions 2... 6. ee 7

4 Content Ledger 7
4.1 Node registry 2. ee 8
4.2 Social features and fan feed 2... ee 8
4.3 Tokens and governance. . 6. 6k ee 8

5 Discovery Node 8
5.1 Discovery API interfaces... ee 9
5.2) Future work... ee 9

6 Governance 9
6.1 Short-circuiting . 2... en 10
6.2 Enforcing node response accuracy. 2... 10

7 History and Roadmap 10
7.1 Genesis (05/2018 —12/2018) 6 eee 10
7.2 Private Alpha (01/2019—07/2019) 2... ee 10
7.3. Testnet (08/2019—09/2020) . nee 10
7.4 Mainnet Launch (10/2020) 2... ee ll
7.5 Crossing the Chasm (12/2020 and beyond) ... 2... 0.0... 0000022. e eee ee ll

8 Community-owned Streaming 11
References 12
1 Introduction

Music creation and distribution have been dramatically
changed by technology in the last two decades. Creating
music no longer requires a team of producers and audio
engineers; anyone in their bedroom can start with inex-
pensive software. Similarly, distributing music no longer
requires factories that produce physical records and re-
tail relationships for getting those records into stores;
music platforms have enabled artists to distribute their
own music.

Though redundant in the age of digital distribu-
tion, the network of intermediaries and middlemen that
formed in the early days of recorded music still persists,
thriving on the back of artists and curators while the
mechanics of value transfer and accrual are still largely
obfuscated [1].

In 2017, the music industry generated $43 billion in
revenue but only 12% of that made its way to artists [2].
As points of comparison, NFL players capture at least
47% of the revenue generated by the entire NFL [3], and
NBA players capture between 49 and 51% [4]. Central-
ized user-generated music distribution platforms have
succumbed to the influence of legacy institutions, strug-
gling to find sustainable business models [5, 6] as existing
institutions reap the rewards of their (and artists’) labor.

1.1 Current problems

We see a number of specific challenges faced by artists
and fans today:

1. There is little to no transparency around the origins
of artist payouts (e.g. number of plays, location,
original gross payment before fees)

2. Incomplete rights ownership data often prevents
content artists from getting paid; instead, earnings
accumulate in digital service providers (DSPs) and
rights societies

3. There are layers of middlemen and significant time
delay involved in payments to artists

4. Publishing rights are complicated and opaque, with

no incentives for the industry to make rights data
public and accurate

. Remixes, covers, and other derivative content are

largely censored due to rights management issues

on

6. Licensing issues prevent DSPs and content from be-
ing accessible worldwide

1.2 The Audius project

We propose the Audius project as a solution to these
problems. The mission of the Audius project is to give

everyone the freedom to distribute, monetize, and stream
any audio content.

The Audius protocol brings artists, node operators,
and fans together in an incentive-aligned way, allowing
these actors to collectively provide a high-quality audio
streaming experience guided by the foundational beliefs
that:

1. Users should be compensated in proportion to how

much value they create for the network

2. Artists should directly engage with and transact

with their fans

3. Governance power should be earned by creating

value in Audius, and shared consistently between
user groups contributing to the protocol

4. Prices and earnings for participants should be con-
sistent, predictable, and transparent

5. Access should be democratized; anyone can con-
tribute to Audius if they follow the protocol rules,
and all information is publicly accessible

6. Intermediaries should be removed when possible;
when necessary, they should be algorithmic, trans-
parent, and verifiably accurate

The Audius protocol allows artists, fans, and node op-
erators to collectively provide a high-quality end-user
music streaming experience without centralized infras-
tructure. The protocol is comprised of the following 5
components working in conjunction:

1. Audius token, stablecoins, and artist tokens:
A platform token and shared token economy that
aligns the incentives of all participants with three
primary prongs of functionality: access, security,
and governance (Section 2)

2. Content nodes: A user-operated network of nodes
to host content and permission access to content on
behalf of artists (Section 3)

3. Content ledger: A single source of truth for al
data accessible within the Audius protocol, anchor-
ing references to content hosted by content nodes
(Section 4)

4. Discovery nodes: A _ user-operated network o
nodes that index the Audius content ledger an
provide an easily queryable interface for retrieving
metadata (Section 5)

5. Governance: A mechanism for modifications an
improvements to Audius, which shares control
among those who have created and are creating
value on an ongoing basis (Section 6)

Put together, Audius creates a protocol where the
shared success of the platform directly benefits the users
responsible for its success.

Open-source implementations of all of these compo-
Discover

Discovery

nodes content

Audius
content ledger

Artists

content

quayuoo

Stream

content

Figure 1: Audius content lifecycle

nents, live and being operated today by the community,
can be found on the project’s Github page.

The protocol will also require end-user facing
clients—these enable users to upload content, discover
and stream content, and follow one another within the
network. The project team has produced an open-source
reference client implementation, hosted at audius.co.
Any developer may produce and distribute their own
client too; many have already.

1.3 Traction

Since its beta release in September of 2019, Audius is
now home to over half a million monthly active users
(MAUs), with over a million monthly streams as of Oc-
tober of 2020. Metrics regarding the protocol’s growth
can be tracked in real time using dashboard.audius.org.

2 Token Model

The Audius protocol will be used by a number of differ-
ent stakeholders with different goals. In order for these
different stakeholders to effectively work together toward
common network goals, there needs to be a unified incen-
tive structure that aligns the interests of the individual
with the interests of the protocol.

The Audius protocol is powered by the Audius plat-
form token ($AUDIO), and with the community’s sup-
port, will likely leverage 3rd-party stablecoins as well as

artist-specific tokens to unlock additional functionality
in future.

2.1 Audius Token ($AUDIO)

Audius platform tokens (ticker $AUDIO) have three
prongs of functionality within the protocol unlocked by
staking:

e Security

e Feature access

e Governance

Audius tokens are staked as collateral for a value-
added services. In exchange, stakers earn ongoing is-
suance, governance weight and access to exclusive fea-
tures.

Audius tokens are staked by node operators to run the
Audius protocol, and by artists and curators to unlock
exclusive features and services. Any $AUDIO staked
within the protocol is assigned governance weight, used
to shape future iterations of the protocol.

Audius tokens will serve as collateral for artist-based
tooling as well. Early examples incubated by the com-
munity include artists tokens, badges and earnings mul-
tipliers. In the future, fans may delegate tokens to spe-
cific artists and curators to share in their growth on the
platform and the issuance of future tokens.

Node operators must stake Audius tokens to operate
a discovery node or content node, with a larger stake
correlating to a higher probability of being chosen by
fan clients. Node operators receive direct upside from
seeding in the form of $AUDIO and the possibility for
future protocol fees for actively seeding the protocol.

A community goal, via governance, is to ensure that
Audius tokens are always being funneled to the most
value-added actors by using onchain metrics as a mea-
rather than simply to those staking the most
tokens but not actively participating in the ecosystem.

surement,

2.1.1 Audius Token Distribution

Audius token wil
location and

be distributed with fixed genesis al-
by ongoing issuance modifiable by gover-

nance.

The choice to launch with ongoing issuance is
grounded in the desire to continually align the network’s
growth with new actors and their relative contributions,
rather than concentrating governance power in the hands
of early actors.

Should the community see fit, a portion of ongo-
ing token issuance will be allocated to the most active
users of the protocol, dictated based on platform metrics
and varying contributions in the form of discoverability,
streams and platform engagement.

More details about this initial supply and issuance
schedule will be provided in a separate specification doc-
ument upon the release of Audius token on mainnet.

2.2 Stablecoin Payments

In future, the Audius community may choose to leverage
3rd-party stablecoins to unlock paid content. These to-
kens are price-stable, providing a stable unit of account
o ensure that artists, fans and node operators can par-
icipate in the Audius economy without concern for price
volatility. Stablecoins are divisible and freely transfer-
able, allowing for highly divisible micropayments. This
makes it easy for artists to set custom rates and for fans
o issue fractional payments with little friction or round-
ing.
A protocol fee may be captured as a percent of sta-
blecoin transactions, including fan payments to artists.
These fees would be aggregated into a pool governed by
Audius token holders.

2.3. Artist Tokens

The project team also foresees Audius providing a di-
rect mechanism for artists to better engage their com-
munity through the distribution of artist tokens. Artists
could have the ability to distribute a unique token di-
rectly through Audius, giving fans who hold a specified
amount of those tokens the ability to access exclusive
content.

a

Artist token artists stake Audius token to access dis-
tribution tools and may receive tailored support from
Audius representatives on best practices regarding the
usage of their token in the wider Ethereum ecosystem.

Artists routing artist tokens through Audius benefit
from a tailored form of distribution, unique to the artist’s
discography. As artist tokens are distributed, artists
must maintain a bond in $AUDIO to continue using the
protocol. This stake ensures that artists are active in
the distribution and maintenance of their tokens while
giving fans the peace of mind that a artist has skin in
the game. As tokens are distributed, a portion of all
artist tokens claimed may be collected by the protocol
and managed through governance.

Artist tokens are earned by fans relative to how the
artist sees fit using the data and interaction mechanics
available natively in the protocol. Artists could use their
token to limit access to token-restricted content or ex-
periences such as unreleased tracks, stems and exclusive
remix competitions.

Audius serves as an aggregator of artist tokens across
issuance platforms such as Roll, Zora and Rally—any
interoperable token can be allocated with the protocol-
native distribution mechanisms.

Governance will play a key role in the structuring of
these distribution channels along with the conditions
which artists must meet to create their own token on
Audius.

2.4 Why create a new token?

For value transfer in the Audius ecosystem, third-party
stablecoins allow micropayments to occur in real-time,
without oversight from a trusted third party to facilitate
the distribution, accounting or collection of royalties and
network fees. Stablecoins are pegged 1:1 to the US Dol-
lar, providing a trusted unit of account with the inherent
benefits of smart contract composability.

Audius tokens exist to align governance and financial
incentives that increase protocol usage and create long-
term protocol value. Participation in governance, as a
node operator, artist or user, allows stakers to earn a
claim on future issuance, incentivizing value-added ac-
tors to increase protocol usage to drive demand back to
Audius tokens.

The inclusion of extendable assets like artist tokens
allows Audius to play an active role in the wider Ethe-
reum and DeFi ecosystem, without having to recreate
the tokens, tooling, and primitives.

3 Content Node

Content nodes maintain availability of content and meta-
data in Audius on AudSP, the Audius-native extension
o IPFS. These nodes can be run by node operators
alongside an active network stake, giving them the op-
portunity to earn part of the ongoing Audius token is-
suance and aggregated fee pools, or can be run by a artist
hemself to host their own content.

By default, a artist’s client elects a set of these nodes
© maintain availability of content automatically on the
artist’s behalf—the vast majority of artists do not need
o have any knowledge of this proces. When relying on
he 3rd-party network of Audius content nodes, after
electing an initial set of nodes this set evolves automat-
ically, with new nodes replacing old ones that are taken
offline or become unavailable.

If the artist chooses, though, they could select self-
hosted node(s) to host their content instead. Running
their own content node(s) gives artists a higher degree
of control over their content distribution by 1) keeping
control of content encryption keys on infrastructure they
control and 2) allowing for custom permissioning exten-
sions that are not native to the protocol.

If a artist fails to satisfy the election process or the
self-hosting process, their content will not be retrievable
by participants in the network.

3.1 AudSP: A decentralized storage pro-
tocol

Files distributed through the Audius protocol must be
highly available, independently verifiable, and decentral-
ized. These principles are key to ensuring democratic
participation and accessibility for all users of the Au-
dius protocol. Artists sharing their tracks and metadata,
fans retrieving content, and node operators will all share
longer-form information via this protocol, while refer-
ences to files in this protocol will reside in the Audius
content ledger. Additionally, the storage protocol must
provide an equivalent user experience to existing central-
ized solutions and scale effectively as network demand
increases.

To that end, we propose AudSP: a decentralized stor-
age solution for the Audius network built on IPFS
(InterPlanetary File System). IPFS enables modular
object-level encryption, global distribution capability,
secure content addressing, and object immutability [7,
§ 3.5.4]. In order to ensure high availability for files
stored through the Audius protocol, AudSP provides a
staking-based incentive structure for users to host net-
work content.

1Previously, there was a concept of a ’creator node” that was
separate from a content node. These have been combined into a
single node type rather than being separate, with ”content node”
referring to the merged type. Some references to ”creator node”
still exist in Audius code and in other documentation; those can
safely be assumed to be referring to the content nodes outlined
here.

F
etch Share
content
encrypted
content and
Submit metadata

proofs &
request.

Content
ledger

ered for

Controls

node Register

new content

Figure 2: Content node interactions with protocol par-
ticipants

File references and associated metadata stored in the
Audius content ledger will be IPLD links [8]. As the de-
centralized storage market matures, the Audius protocol
may be extended to include other storage solutions such
as FileCoin [9], Sia [10], or Swarm [11].

3.2 Upload flow

To distribute a track on Audius, artists must agree to
the Audius open license (this license will be published
in a separate brief), making the content available on the
broader Audius network.
The artist’s client will then (1) slice the track into
fixed-length segments, (2) encrypt them locally (if the
content is permissioned) with segment-specific keys, and
(3) upload these encrypted segments, the encryption
keys, and required metadata to their content node(s).
The content node(s) then publish the content and meta-
data to AudSP, producing an IPLD link for the meta-
data which the artist client adds to the Audius content
edger via a new transaction (See Section 4 for more on
this process), which then prompts the discovery nodes
on the network to index the new content and make it
more broadly discoverable and available (see Section 5
‘or more on this process).

3.3 Content permissioning

In addition to maintaining content availability, content
nodes also take responsibility for permissioning access to
content.

The content permissioning system in Audius aims to
be:

1. Transparent for all parties involved

2. Cost- and time- efficient for all transactions

3. Flexible, accounting for multiple streaming models
and any monetization scheme the artist sees fit
4. Granular, with users paying each other directly and
immediately for services rendered when possible

As described in the upload flow in Section 4, if content
is permissioned, the artist’s client at upload time gener-
ates encryption keys for the content that are shared with
/ managed by the content node(s) elected by the artist
thereafter.

Because of AudSP, anyone can now fetch the en-
crypted content being kept available by the elected con-
tent nodes. Proxy re-encryption is what allows a content
node to selectively issue a key to a given user upon re-
quest.

3.3.1 Proxy re-encryption

When beginning to stream a track, a fan’s client will
make a request to one of a artist’s elected content nodes,
including a payment or other proof if required, for a
proxy re-encryption key specific to the segment of the
rack being consumed.

To service this request, the content node derives a
proxy re-encryption key using the fan’s public wallet key
and the private key used to encrypt the requested track
and returns it to the fan. Because the re-encryption
key is specific to the artist, fan, and segment, it can
be transmitted insecurely or published without reveal-
ing the track contents to the greater network.
The cryptosystem used to encrypt tracks will allow the
issuance of fan-specific proxy re-encryption keys derived
from the track encryption key and the fan’s public key.
The artist’s content node(s) will handle key requests and
issue new keys when the specified conditions are met,
issuing a new key by mixing the track encryption key
with the fan’s wallet’s public key.

After fetching encrypted content and a re-encryption
key, the fan client would locally decrypt the content us-
ing their wallet private key as follows:

proxied = reencrypt(encrypted_content,
reencryption_key)

plaintext = decrypt (proxied,
wallet_privkey)

This decrypts a given piece of content by locally re-
encrypting it using the aforementioned key and subse-
quently decrypting it with the user’s own private key.
There is no 3rd-party proxy, but proxy re-encryption
applied in this way allows everyone to share the same
encrypted content while users can only decrypt the con-
tent on a case-by-case basis. Potential cryptosystems,
including AFGH [12], are still being evaluated by the
community at this time.

3.3.2 Unlock conditions

Artists can tie ability to unlock any piece of content to
any condition they choose—some unlock conditions na-
tive to the protocol, if the community chooses, could
include:
e A payment being made
e Sufficient holding of an artist’s token (see 2.3)
e Past streaming behavior attested by a discovery
node, including but not limited to:
— following the artist
— streamed artist’s work more than a given num-
ber of times

— reposted artist’s content more than a number
of times

The content node would look for the specified condi-
tion to be satisified to issue a proxy re-encryption key at
the fan’s request.

By running their own content node, a artist could per-
mission content in any additional way they see fit. Their
node software can be modified to add new unlocking per-
mission modules, serving as a testbed for modules to
make their way into the core protocol too.

4 Content Ledger

The Audius content ledger, referred to as such through-
out the paper, is the amalgamation of smart contracts on
Ethereum [13], POA network [14], and other future L1 or
L2 blockchain networks that host pieces of the Audius
ecosystem. Different parts of the Audius protocol will
continue to run on different blockchain-based platforms,
or utilize off-chain scalability solutions, where scalabil-
ity trilemma tradeoffs [15] can be made on a module and
subprotocol-specific basis.
Today, the content ledger for Audius includes:
e A consistent audio content and metadata format
specification to ensure accessibility (similar to the
OMI metadata spec [16, § 3.7.1-3.7.2])

e A decentralized process for artists to control:

— Track content
— Revenue splits

— Content ownership structure

e A registry of all nodes reachable in Audius
e The social graph of all users interacting with Audius
e Implementations of the token and governance sys-
tems described in this paper
After generating upload artifacts from their content
nodes, as described in Section 3.2, a artist can add their
content to the content ledger via a new transaction:

Track {
owner_address
map(artistId => ownership)
metadataIPLD
. other metadata ...

Where the linked metadata could be a JSON file struc-
tured along these lines:

{
"trackTitle": "...",
"segmentIpldLinks": ["...", "...", ...],
. other metadata ...
}

The artist can then modify track content/metadata
by sharing the modified content to AudSP and updating
the metadata IPLD link in the content ledger.

Once content is listed in the content ledger, it is in-
dexed by the discovery nodes as detailed in Section 5
which ultimately makes it easily queryable and discover-
able by clients accessing Audius.

4.1 Node registry

The Audius content ledger maintains a single source of
truth for 1) all the valid versions of node software usable
within Audius, controlled by governance (Section 6), 2)
all the discovery and content nodes reachable within Au-
dius and 3) how to find them (via IP address or fully-
qualified domain name).

When a client connects to Audius for the first time, it
can use this on-chain registry to bootstrap its local state
(eg. looking up which account maps to the active wallet,
what is the current user’s social graph / feed, etc. via a
chosen discovery node)

4.2 Social features and fan feed

The content ledger also serves as a central source of
truth for fan/artist interactions happening within Au-
dius. Users can take the following actions within Audius:

e Stream a track

e Like a track, adding it to the fans’ own library

e Follow other fans and artists, and receive notifica-
tions when new original content, reposts, playlists,
or comments are created by them

e Create a public (shared to followers) or private
playlist

e Repost tracks to followers

With more action types to be added in future via
community governance (eg. comments have been a
commonly-requested addition). Actions taken by users
get organized into user-specific feeds that reflect the
time-sorted actions of the other users they follow—this
is enabled by the indexing functionality described in the
next section.

All social actions within Audius are represented in the
content ledger, meaning users can use any client to con-
nect to Audius and see the same social graph. Fans can
also view what other fans have been streaming, as can
developers building third-party clients. This opens up
many possibilities around content recommendation sys-
tems and alternative client experiences built by members
of the Audius developer community.

4.3. Tokens and governance

The Audius content ledger is also the home of the Au-
dius token economy (Section 2) and Audius governance
system (Section 6), described in further detail in their
respective sections.

5 Discovery Node

In order for a fan to discover content on the network,
Audius needs a mechanism for indexing metadata that is
efficiently queryable by users. Based on the philosophies
of the Audius project, this index must be:

e Decentralized

e Efficient and straightforward for user clients to con-
sume (promoting accessibility)

e Provably correct and transparent, eliminating profit
incentives to manipulate the results returned to
users

e Extensible, so that the Audius community can ex-
plore different ranking and searching methodologies.

These requirements rule out the most decentralized
options due to usability and efficiency issues, e.g. users
replicating the Audius ledger locally and querying their
local dataset. This section outlines a protocol for a class
of discovery nodes to form operated by the Audius com-
munity, serving this function in a way that meets the
Clients

Choose
interface

Interfaces

Register
compliance
with interface

Discovery
nodes

Figure 3: Discovery API interface registration and usage

above requirements.

Discovery node operators earn revenue by registering
a node with an active network stake, letting them earn
part of the ongoing Audius token issuance and aggre-
gated fee pools. Fan clients select discovery nodes to
query from via the content ledger’s node registry (Sec-
ion 4.1).

Discovery nodes are read-only. Clients can use them
o fetch a fan’s feed, a playlist, song and artist meta-
data, search the corpus of Audius entities, and execute
other queries about the network. Anyone can register a
discovery node if they meet the requirements outlined in
his section.

5.1 Discovery API interfaces

Audius will produce a first-party discovery API interface,
but other community members are encouraged to author
their own interfaces that extend or modify the core API.
The protocol allows fans to select any discovery API in-
terface registered in the Audius content ledger.

An API interface must index new blocks from the Au-
dius ledger atomically (i.e. all-or-nothing), and all API
methods must be deterministic. Because of these re-
quirements, for a given block hash, all discovery nodes
running a given API interface will produce identical re-

sults for the same query. This consistency guarantee is
essential for the penalty mechanism described in Sec-
tion 6.2.

5.2 Future work

We foresee the community creating an incentive econ-
omy around discovery node interfaces, which would al-
low the creator / maintainer of an interface to earn a
portion of rewards earned by node operators using said
interface. Node rewards could also be tied to number
of requests fielded to incentivize nodes to operate with
higher-quality infrastructure and in locations near large
population centers.

6 Governance

Integral to achieving this mission is a decentralized gov-
ernance protocol, whereby artists, node operators, and
fans are individually and collectively enfranchised in de-
cision making about protocol changes and upgrades.

In the spirit of creating a community-owned and op-
erated streaming protocol, these key actors should be
empowered to shape, mend and modify underlying pa-
rameters of the Audius protocol including but not lim-
ited to:

e Feature Integrations

e Royalty Rates

e Token Distribution
e Fee Pool Allocation
e Staking Rewards

Everything in Audius is governable, and all Audius to-
kens staked in the protocol automatically receives gov-
ernance weight on a 1 token, 1 vote basis.

Audius politicians differ in the sense that node opera-
tors are unique from artists and curators, both of which
are aligned in the growth of the protocol. Governance
will look to present both technical and nontechnical pro-
posals, giving all users the ability to properly voice their
beliefs without needing to run a node or have a deep
technical understanding of the Audius tech stack.

For node operators, Audius governance acts as a key
tool to empower decentralized content storage, provid-
ing a direct mechanism for rewards to be earned and
amended in line with the costs, value and consensus of
other providers on the network.

By creating a framework for users to adjust the di-
rection of the protocol in line with their shared beliefs,
Audius will curate governance to the most value-added
actors, possibly tying in incentives to those who are most
active.

In doing so, core Audius politicians will play an ac-
tive role in both future token issuance, node operator
incentives, and creative mechanisms for artists to better
engage their community.

6.1 Short-circuiting

There is a short-circuit process that allows both 1) pro-
posals to be passed without broader vote if urgency re-
quires, eg. during active exploitation of a vulnerability
in the protocol, and 2) proposals to be vetoed if they
are not consistent with the philosophies outlined in this
paper.
This short-circuit capability will be controlled by a
community multisig with an initial set of signers. Addi-
tional signers can be voted into place via the open com-
munity governance process.

The community, at any time, can vote to remove the
ability to short-circuit governance if they choose, and the
controllers of the short-circuit multisig have committed
to not veto said proposal when the time comes to relin-
quish control.
The project team added this functionality to the gov-
ernance process with the intention for it to be removed—
it is up to the community to decide when it makes sense
to take off the training wheels or whether it makes sense
to have this functionality at all.

6.2 Enforcing node response accuracy

Every response a community-operated node in Audius
returns is signed with the private key that was used to
stake the original tokens or a designated delegate, the
block hash of the block they have incorporated up to that
point (for discovery nodes) or a timestamp (for content
nodes), inputs provided to query, and the node software
version from the public version registry they are using
to generate results.
Blocks are indexed atomically in discovery nodes and
API methods are deterministic, meaning that every dis-
covery node should produce identical results for the same
query, block hash, and API interface.
The content node by nature cannot provide as strong
of guarantees by timestamp as the discovery node can by
block numbers and deterministic indexing, but sequences
of requests with responses (ordered by timestamp) signed
by the operator key can provide a similar function for
demonstrating behavior in a provable way.
If either node type produces invalid or inaccurate re-
sults, the signed result document returned by the node
is a self-contained proof that the given node produced
the given set of results.
Using these proofs as evidence, a claimant could open

a governance proposal to slash a given node operator for

10

this alleged misbehavior. The governance process can
decide whether there is indeed inaccuracy, whether said
inaccuracy was caused by negligence or maliciousness vs.
a system error, and slash the node operators stake ac-
cordingly. Slashed tokens are burned rather than redis-
tributed to stakers to avoid incentivizing slashes.

7 History and Roadmap

Detailed below is a breakdown of the progress Audius has
made to date, culminating in a transition to protocol-
owned and operated decentralized governance.

7.1 Genesis (05/2018—12/2018)

Shortly after the project was founded, the project team
released an initial version of the Audius whitepaper de-
tailing the plans for the architecture, and shipped the
first functional implementations of the Audius smart
contracts, content node, and discovery node.

7.2 Private Alpha (01/2019—07/2019)

6 months after founding the project, the project team
began inviting early users to engage with the protocol
and an early client implementation to provide feedback.
In this phase, access to the product was granted on an
invite-only basis and major issues were ironed out in
a controlled environment before introducing 3rd-party
node operators into the network.

At this time, all content uploaded to Audius was
hosted on IPFS, and the client was interacting directly
with the initial implementations of the content node and
discovery node. The Audius client also featured a unique
web3 login mechanism called Hedgehog, allowing users
to sign up with an email and password in a trustless
manner, rather than having to connect with Metamask.
This was open-sourced as a standalone project to help
other consumer-facing products achieve a higher degree
of usability.

7.3 Testnet (08/2019—09/2020)

The Audius protocol began welcoming its first 3rd-party
node operators into the network, with artist content and
metadata being hosted by end users for the first time.
Through this period, as more node operators were on-
boarded, the project team wound down most of their
internally-operated nodes, maintaining a few as a canary
mechanism to understand how the network is perform-
ing.

One month into this testnet period, at the end of
September 2019, the Audius first-party client implemen-
tation launched publicly for the first time. This included

basic functionality for uploading content, playing con-
tent, searching for / following artists, and more.

Over the following months, many more client fea-
tures were shipped, including: notifications, mobile
apps / desktop apps, remix competitions, and a well-
documented API for interfacing with user-operated
nodes directly.

By the end of the testnet period, the protocol was
being used by over 500,000 fans every month (see Sec-
tion 1.3 for more details).

7.4 Mainnet Launch (10/2020)

The mainnet launch of Audius is the genesis of the Au-
dius platform token, allowing fans, artists and curators
to earn a piece of the platform as a value-added user.
Alongside the suite of client use-cases detailed previ-
ously, Audius will introduce a protocol dashboard to
showcase analytics and governance for all stakeholders.

7.5 Crossing the Chasm (12/2020 and
beyond)

The Audius community will roll out new mechanisms
for content ownership and revenue never before possi-
ble, backed by the crypto-native primitives driving the
protocol under the hood. As a platform well poised to
bridge the gap between crypto and a mainstream audi-
ence, Audius will always prioritize simplicity to offer an
intuitive user experience grounded in web3.

With Audius token, active participants will dictate
protocol changes through an ongoing distribution to new
stakeholders. To maintain governance weight, partic-
ipants of the protocol must continually contribute in
value-added ways, or have their governance power di-
uted and replaced by others doing the same.

In doing so, Audius will live forever as a protocol
owned and operated entirely by its users, stewarded by

11

community governance.

8 Community-owned Streaming

Audius stands at the forefront of pioneering the vision
for a community owned streaming protocol. The com-
munity that has formed around this protocol has become
formiddable, growing far beyond the reaches of the smal.
project team that built the initial implementations o:
each respective component.

Audius has historically thrived on word o
ferrals. As a protocol empowering anyone in the worl
to become a talent scout and capture value from that ac-
tivity, growth has been highly correlated with passionate
artists and curators taking advantage of the high degree
of control and leverage that this community owned an
operated streaming protocol provides.

With the support of many of the great builders in the
space that have preceded us in the intersection of music
and decentralization, Audius stands on the shoulders o
giants, taking best practices around music distribution,
governance, and token mechanics to create a streaming
protocol that is owned and operated by its most active,
valuable users.

mouth re-

For artists, we encourage you to take this opportunity
to make your mark as an early adopter. The spectrum
in which value can be created varies greatly, and the
Audius community prides itself on creating opportuni-
ties for artists, curators and fans of all shapes and sizes
to collectively share in the upside of the unstoppable
streaming protocol of tomorrow.

To those who have been plagued by industry incum-
bents for the duration of their artistic career, let this be
a call to arms to reimagine and pave a new path—one
in which every aspect of the experience is grounded in
sovereignty and decentralization.

We look forward to seeing you along the way.

References

1

10

11
12

13

14
15
16

Micah Singleton. This was Sony Music’s contract with Spotify. May 9, 2015. URL: https: //bit .1ly/audius-
sony-spotify (visited on 08/28/2018).

Jason B Bazinet, Mark May, Kota Ezawa, Thomas A Singlehurst, Jim Suva, and Alicia Yap. Putting the Band
Back Together. Remastering the World of Music. White paper. Citi GPS: Global Perspectives & Solutions, Aug.
2018. URL: https://bit .ly/audius-remastering-music (visited on 08/28/2018).

Sam Mamudi. NFL lockout ends as players OK deal with owners. July 25, 2011. URL: https : // bit . ly /
audius-nfl-lockout (visited on 08/28/2018).

David Aldridge. NBA, NBPA reach tentative seven-year CBA agreement. Dec. 14, 2018. URL: https://bit.ly/
audius-nba (visited on 08/28/2018).

Dani Deahl and Casey Newton. How SoundCloud’s broken business model drove artists away. July 21, 2017.
URL: https: //bit.ly/audius-soundcloud-model (visited on 08/28/2018).

Josh Constine. SoundCloud sinks as leaks say layoffs buy little time. July 12, 2017. URL: https: //bit .ly/
audius-soundcloud-layoffs (visited on 08/28/2018).

Juan Benet. IPFS—Content Addressed, Versioned, P2P File System (Draft 3). 2014. URL: https: //bit.1ly/
audius-ipfs (visited on 08/28/2018).

IPLD Specifications. Protocol Labs. 2017. URL: https://bit.ly/audius-ipld (visited on 08/28/2018).

Filecoin: A Decentralized Storage Network. Protocol Labs. 2017. URL: https: //bit .1ly/audius~filecoin
(visited on 08/28/2018).

David Vorick. How to Put Data on the Sia Network. Nebulous, Inc. 2017. URL: https: //bit.ly/audius-sia
(visited on 08/28/2018).
What is swarm? Ethersphere. 2017. URL: https: //bit .ly/audius~swarm (visited on 08/28/2018).

Giuseppe Ateniese, Kevin Fu, Matthew Green, and Susan Hohenberger. “Improved Proxy Re-Encryption
Schemes with Applications to Secure Distributed Storage”. In: Proceedings of the 12th Annual Network and
Distributed System Security Symposium (NDSS). 2005. URL: https: //bit .ly/audius-proxy-re-encryption
(visited on 08/28/2018).

What is Ethereum? Ethereum Foundation. 2020. URL: https : //ethereum. org/en/what - is- ethereum/
(visited on 10/05/2020).

Welcome to POA. POA Network. 2020. URL: https: //www.poa.network/ (visited on 10/05/2020).

Sharding FAQs. Ethereum. 2018. URL: https: //bit .ly/audius-ethereum-sharding (visited on 09/14/2018).

OMI Requirements Documentation Minimum Viable Interoperability 1.0. Specifications documentation. July 26,
2017. URL: https://bit .ly/audius-open-music-initiative (visited on 08/28/2018).

12
